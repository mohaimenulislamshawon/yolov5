# YOLOv5 ðŸš€ by Ultralytics, AGPL-3.0 license

# Parameters
nc: 8 # number of classes
depth_multiple: 0.67 # model depth multiple
width_multiple: 0.75 # layer channel multiple
anchors:
  - [10, 13, 16, 30, 33, 23] # P3/8
  - [30, 61, 62, 45, 59, 119] # P4/16
  - [116, 90, 156, 198, 373, 326] # P5/32

# Modified YOLOv5 backbone with ConViT architecture
backbone:
  # [from, number, module, args]
  [
    [-1, 1, Conv, [32, 7, 2, 2]], # 0 - ConViT: Conv layer with kernel size 7
    [-1, 1, MaxPool, [3, 2, 1]], # 1 - ConViT: MaxPool layer
    [-1, 1, Conv, [64, 3, 1, 1]], # 2 - ConViT: Conv layer with kernel size 3
    [-1, 1, MaxPool, [3, 2, 1]], # 3 - ConViT: MaxPool layer
    [-1, 1, Conv, [128, 3, 1, 1]], # 4 - ConViT: Conv layer with kernel size 3
    [-1, 1, MaxPool, [3, 2, 1]], # 5 - ConViT: MaxPool layer
    [-1, 3, C3, [128]], # 6 - ConViT: Bottleneck (C3) layer
    [-1, 1, Conv, [256, 3, 2]], # 7 - Transition layer: Conv layer
    [-1, 6, C3, [256]], # 8 - Standard YOLOv5 Bottleneck (C3) layer
    [-1, 1, Conv, [512, 3, 2]], # 9 - Transition layer: Conv layer
    [-1, 9, C3, [512]], # 10 - Standard YOLOv5 Bottleneck (C3) layer
    [-1, 1, Conv, [1024, 3, 2]], # 11 - Transition layer: Conv layer
    [-1, 3, C3, [1024]], # 12 - Standard YOLOv5 Bottleneck (C3) layer
    [-1, 1, SPPF, [1024, 5]], # 13 - Standard YOLOv5 SPPF layer
  ]

# YOLOv5 v6.0 head
head: [
    [-1, 1, Conv, [512, 1, 1]],
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],
    [[-1, 10], 1, Concat, [1]], # cat backbone P4
    [-1, 3, C3, [512, False]], # 17 (P3/8-small)

    [-1, 1, Conv, [256, 1, 1]],
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],
    [[-1, 8], 1, Concat, [1]], # cat backbone P3
    [-1, 3, C3, [256, False]], # 21 (P3/8-small)

    [-1, 1, Conv, [256, 3, 2]],
    [[-1, 17], 1, Concat, [1]], # cat head P4
    [-1, 3, C3, [512, False]], # 25 (P4/16-medium)

    [-1, 1, Conv, [512, 3, 2]],
    [[-1, 12], 1, Concat, [1]], # cat head P5
    [-1, 3, C3, [1024, False]], # 29 (P5/32-large)

    [[21, 25, 29], 1, Detect, [nc, anchors]], # Detect(P3, P4, P5)
  ]
